// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: internal/v2/ppdd_ppac_parameters.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// This file is auto-generated, DO NOT make any changes here

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersIOS {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

struct SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersAndroid {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var requireBasicIntegrity: Bool = false

  var requireCtsprofileMatch: Bool = false

  var requireEvaluationTypeBasic: Bool = false

  var requireEvaluationTypeHardwareBacked: Bool = false

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

#if swift(>=5.5) && canImport(_Concurrency)
extension SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersIOS: @unchecked Sendable {}
extension SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersAndroid: @unchecked Sendable {}
#endif  // swift(>=5.5) && canImport(_Concurrency)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "SAP.internal.v2"

extension SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersIOS: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".PPDDPrivacyPreservingAccessControlParametersIOS"
  static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersIOS, rhs: SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersIOS) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersAndroid: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".PPDDPrivacyPreservingAccessControlParametersAndroid"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "requireBasicIntegrity"),
    2: .same(proto: "requireCTSProfileMatch"),
    3: .same(proto: "requireEvaluationTypeBasic"),
    4: .same(proto: "requireEvaluationTypeHardwareBacked"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularBoolField(value: &self.requireBasicIntegrity) }()
      case 2: try { try decoder.decodeSingularBoolField(value: &self.requireCtsprofileMatch) }()
      case 3: try { try decoder.decodeSingularBoolField(value: &self.requireEvaluationTypeBasic) }()
      case 4: try { try decoder.decodeSingularBoolField(value: &self.requireEvaluationTypeHardwareBacked) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.requireBasicIntegrity != false {
      try visitor.visitSingularBoolField(value: self.requireBasicIntegrity, fieldNumber: 1)
    }
    if self.requireCtsprofileMatch != false {
      try visitor.visitSingularBoolField(value: self.requireCtsprofileMatch, fieldNumber: 2)
    }
    if self.requireEvaluationTypeBasic != false {
      try visitor.visitSingularBoolField(value: self.requireEvaluationTypeBasic, fieldNumber: 3)
    }
    if self.requireEvaluationTypeHardwareBacked != false {
      try visitor.visitSingularBoolField(value: self.requireEvaluationTypeHardwareBacked, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersAndroid, rhs: SAP_Internal_V2_PPDDPrivacyPreservingAccessControlParametersAndroid) -> Bool {
    if lhs.requireBasicIntegrity != rhs.requireBasicIntegrity {return false}
    if lhs.requireCtsprofileMatch != rhs.requireCtsprofileMatch {return false}
    if lhs.requireEvaluationTypeBasic != rhs.requireEvaluationTypeBasic {return false}
    if lhs.requireEvaluationTypeHardwareBacked != rhs.requireEvaluationTypeHardwareBacked {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
