// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: internal/v2/corona_test_parameters.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

/// This file is auto-generated, DO NOT make any changes here

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct SAP_Internal_V2_CoronaTestParameters {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var coronaRapidAntigenTestParameters: SAP_Internal_V2_CoronaRapidAntigenTestParameters {
    get {return _coronaRapidAntigenTestParameters ?? SAP_Internal_V2_CoronaRapidAntigenTestParameters()}
    set {_coronaRapidAntigenTestParameters = newValue}
  }
  /// Returns true if `coronaRapidAntigenTestParameters` has been explicitly set.
  var hasCoronaRapidAntigenTestParameters: Bool {return self._coronaRapidAntigenTestParameters != nil}
  /// Clears the value of `coronaRapidAntigenTestParameters`. Subsequent reads from it will return its default value.
  mutating func clearCoronaRapidAntigenTestParameters() {self._coronaRapidAntigenTestParameters = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _coronaRapidAntigenTestParameters: SAP_Internal_V2_CoronaRapidAntigenTestParameters? = nil
}

struct SAP_Internal_V2_CoronaRapidAntigenTestParameters {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var hoursToDeemTestOutdated: UInt32 = 0

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "SAP.internal.v2"

extension SAP_Internal_V2_CoronaTestParameters: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CoronaTestParameters"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "coronaRapidAntigenTestParameters"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._coronaRapidAntigenTestParameters) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._coronaRapidAntigenTestParameters {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: SAP_Internal_V2_CoronaTestParameters, rhs: SAP_Internal_V2_CoronaTestParameters) -> Bool {
    if lhs._coronaRapidAntigenTestParameters != rhs._coronaRapidAntigenTestParameters {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension SAP_Internal_V2_CoronaRapidAntigenTestParameters: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".CoronaRapidAntigenTestParameters"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "hoursToDeemTestOutdated"),
  ]

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularUInt32Field(value: &self.hoursToDeemTestOutdated) }()
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if self.hoursToDeemTestOutdated != 0 {
      try visitor.visitSingularUInt32Field(value: self.hoursToDeemTestOutdated, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: SAP_Internal_V2_CoronaRapidAntigenTestParameters, rhs: SAP_Internal_V2_CoronaRapidAntigenTestParameters) -> Bool {
    if lhs.hoursToDeemTestOutdated != rhs.hoursToDeemTestOutdated {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
