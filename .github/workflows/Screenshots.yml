name: Create Screenshots
on: workflow_dispatch

jobs:
  dependencies:
    runs-on: self-hosted
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2     
      - name: Save Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        env:
          cache-name: cache-dependencies
        with:
          path: |
            src/xcode/vendor
            src/xcode/.bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('src/xcode/Gemfile.lock') }}        
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: cd src/xcode && arch -arm64 bundle install --path=vendor
      - name: Save Dependencies
        uses: actions/cache@v2
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        env:
          cache-name: cache-dependencies
        with:
          path: |
            src/xcode/vendor
            src/xcode/.bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('src/xcode/Gemfile.lock') }}
        
  buildForTesting:
    runs-on: self-hosted
    needs: dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2     
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            src/xcode/vendor
            src/xcode/.bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('src/xcode/Gemfile.lock') }}     
      - name: Build for testing
        run: |
          cd src/xcode && arch -arm64 bundle exec fastlane build_for_testing
      - name: Save DerivedData folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: src/xcode/DerivedData
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Save test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: src/xcode/fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          
  snapshot:
    runs-on: self-hosted
    needs: buildForTesting
    strategy:
      matrix:
       language: ["de-DE", "en-EN"]
       displaymode: ["dark", "light"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2            
      - name: Restore Dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-dependencies
        with:
          path: |
            src/xcode/vendor
            src/xcode/.bundle
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('src/xcode/Gemfile.lock') }}
      - name: Restore DerivedData folder
        uses: actions/cache@v2
        env:
          cache-name: cache-derived-data
        with:
          path: src/xcode/DerivedData
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
      - name: Restore test_output folder
        uses: actions/cache@v2
        env:
          cache-name: cache-test-output
        with:
          path: src/xcode/fastlane/test_output
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}                         
      - name: Snapshot ${{ matrix.language }}-${{ matrix.displaymode }}
        run: |
          cd src/xcode && arch -arm64 bundle exec fastlane screenshot languages:${{ matrix.language }} mode:${{ matrix.displaymode }}
      - name: Archive xcresult
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: xcresult-${{ github.sha }}
          path: src/xcode/fastlane/test_output/ENA.xcresult.zip
      - name: Remove test_output folder
        run: |
          cd src/xcode/screenshots/screenshots-${{ matrix.language }}-${{ matrix.displaymode }}
          rm -r test_output
      - uses: actions/upload-artifact@v2
        with:
          name: screenshots-${{ github.sha }}
          path: src/xcode/screenshots